{
  "name": "node-server",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "start": "npm-run-all clean tsc start-node",
    "start-node": "node ./build/app",
    "clean": "rimraf build",
    "tsc": "tsc",
    "dev": "ts-node app.ts",
    "lint": "./node_modules/.bin/eslint . --fix",
    "test": "NODE_ENV=test mocha -r ts-node/register src/test/testSuite.ts --exit"
  },
  "comments": {
    "generalInformation": "Turning on line wrapping in your IDE for this file would be very helpful for sanity haha. See this link: https://code.visualstudio.com/docs/getstarted/settings#_language-specific-editor-settings. Also this comments portion is NOT built in to npm. It is just a space to add comments because JSON doesn't allow you to do that.",
    "scripts": {
      "start": "Will start the server as if it were in production. This cleans the build folder, runs the typescript compiler, and starts up node. ",
      "lint": "Runs the linting process on the files in `node_server` with exceptions stated earlier for the `.eslintignore` file and the configuration in the config file",
      "dev": "Runs the node application in a hot-reloading fashion",
      "test": "Will run all the tests in the `src/test` folder and first sets the NODE_ENV system variable to test. This is picked up by the logger to change how it logs things."
    },
    "dependencies": {
      "npm-run-all": "This needs to be in the dependencies section and not devDependencies so that Heroku can run it. Heroku prunes devDependencies.",
      "rimraf": "Allows for quick rm -rf capabilities with npm",
      "ts-node": "Run node in hot-reloading fashion with typescript files",
      "@typescript-eslint/eslint-plugin": "Locked to 2.31.x because there was an issue as of 5/12/2020 with 2.32.x that was causing builds to fail. It was being worked on by the devs that same day. So this can be upgraded when it is fixed.",
      "@typescript-eslint/parser": "See comment above"
    },
    "devDependencies": {
      "nodemon": "Runs the node server on updates üòÅ",
      "husky": "Used to handle linting before commits",
      "lint-staged": "Used to handle linting before commits as well"
    }
  },
  "dependencies": {
    "@types/chai": "^4.2.11",
    "@types/cors": "^2.8.6",
    "@types/express": "^4.17.6",
    "@types/express-session": "^1.17.0",
    "@types/mocha": "^7.0.2",
    "@types/mongoose": "^5.7.18",
    "@types/morgan": "^1.9.0",
    "@types/node": "^14.0.0",
    "@types/node-fetch": "^2.5.7",
    "@types/swagger-jsdoc": "^3.0.2",
    "@types/swagger-ui-express": "^4.1.2",
    "@typescript-eslint/eslint-plugin": "~2.31.0",
    "@typescript-eslint/parser": "~2.31.0",
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "cors": "^2.8.5",
    "debug": "~2.6.9",
    "dotenv": "^8.2.0",
    "express": "~4.16.1",
    "express-session": "^1.17.1",
    "mocha": "^10.2.0",
    "mongoose": "^5.9.13",
    "mongoose-int32": "^0.3.1",
    "morgan": "~1.9.1",
    "node-fetch": "^2.6.0",
    "nodemon": "^2.0.3",
    "npm-run-all": "^4.1.5",
    "pug": "^2.0.4",
    "rimraf": "^3.0.2",
    "swagger-jsdoc": "^4.0.0",
    "swagger-ui-express": "^4.1.4",
    "ts-node": "^8.10.1",
    "typescript": "^3.8.3"
  },
  "devDependencies": {
    "eslint": "^7.0.0",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-jsdoc": "^25.0.1",
    "eslint-plugin-prettier": "^3.1.3",
    "husky": "^4.2.5",
    "lint-staged": "^10.2.2",
    "prettier": "^2.0.5"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix"
    ]
  }
}
